Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Schedular.X.production.sym \
  --cmf=dist/default/production\Schedular.X.production.cmf -z -Q16F877A \
  -oC:\Users\MOHAME~1\AppData\Local\Temp\s12dg.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Schedular.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\MOHAME~1\AppData\Local\Temp\s12dg.o \
  dist/default/production\Schedular.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\MOHAME~1\AppData\Local\Temp\s12dg.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
dist/default/production\Schedular.X.production.o
                cinit                                15       15       16        8       0
                functab                              2B       2B       13       56       0
                intentry                              4        4        E        8       0
                text13                              2B9      2B9        7       7C       0
                text12                              2B2      2B2        7       7C       0
                text11                              2AB      2AB        7       7C       0
                text10                              287      287       15       7C       0
                text9                               10A      10A       7A       7C       0
                text8                               237      237       23       7C       0
                text7                               29C      29C        8       7C       0
                text6                               2A4      2A4        7       7C       0
                text5                               25A      25A       17       7C       0
                text4                               1D2      1D2       3F       7C       0
                text3                               271      271       16       7C       0
                text2                                3E       3E       CC       7C       0
                text1                               211      211       26       7C       0
                maintext                            184      184       4E       7C       0
                cstackBANK0                          2F       2F        9       20       1
                cstackCOMMON                         70       70        D       70       1
                bssBANK0                             20       20        F       20       1
                bssCOMMON                            7D       7D        1       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       16         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text13                              2B9      2B9        7         0
                text12                              2B2      2B2        7         0
                text11                              2AB      2AB        7         0
                text10                              287      287       15         0
                text9                               10A      10A       7A         0
                text8                               237      237       23         0
                text7                               29C      29C        8         0
                text6                               2A4      2A4        7         0
                text5                               25A      25A       17         0
                text4                               1D2      1D2       3F         0
                text3                               271      271       16         0
                text2                                3E       3E       CC         0
                text1                               211      211       26         0
                maintext                            184      184       4E         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          
                functab                              2B       2B       13         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1
                bssCOMMON                            7D       7D        1         1

        CLASS   BANK0          
                cstackBANK0                          2F       2F        9         1
                bssBANK0                             20       20        F         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000027  00002B         8       0  CODE        2
                bssBANK0                       000020  000018  000038        20       1  BANK0       1
                functab                        00002B  000013  00003E        56       0  ENTRY       2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text2                          00003E  000282  0002C0        7C       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            038-06F            38           1
        BANK1            0A0-0EF            50           1
        BANK2            110-16F            60           1
        BANK3            190-1EF            60           1
        CODE             003-003             1           2
                         2C0-1FFF           800
        CONFIG           2007-2007             1           2
        CONST            003-003             1           2
                         2C0-1FFF           100
        EEDATA           2100-21FF           100           2
        ENTRY            003-003             1           2
                         2C0-1FFF           100
        IDLOC            2000-2003             4           2
        RAM              038-06F            38           1
                         0A0-0EF            50
                         110-16F            60
                         190-1EF            60
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-10F            10           1
        SFR3             180-18F            10           1
        STACK            110-16F            60           1
        STRCODE          003-003             1           2
                         2C0-1FFF          1D40
        STRING           003-003             1           2
                         2C0-1FFF           100

                                  Symbol Table

DIO_SetPinDirection@u8PinDirCopy      cstackBANK0  030
DIO_SetPinDirection@u8PinIdCopy       cstackBANK0  02F
DIO_SetPinDirection@u8PortIdCopy      cstackBANK0  033
RTO_vid_CreateTask@copy_pFn           cstackBANK0  036
RTO_vid_CreateTask@copy_u16FirstDelay cstackBANK0  034
RTO_vid_CreateTask@copy_u16Priodicity cstackBANK0  032
RTO_vid_CreateTask@copy_u8Priority    cstackBANK0  037
RTO_vid_StartSchedular@u8_TCB_Counter cstackCOMMON 077
Timer_SetCallBack@local_pFn           cstackBANK0  02F
_DIO_SetPinDirection                  text2        03E
_Global_pFn                           bssCOMMON    07D
_GreenLed_TOG                         text11       2AB
_ISR                                  text8        237
_RTO_Init                             text6        2A4
_RTO_vid_CreateTask                   text4        1D2
_RTO_vid_StartSchedular               text9        10A
_RedLed_TOG                           text12       2B2
_Tasks                                bssBANK0     020
_Timer1_Init_Comp                     text3        271
_Timer_SetCallBack                    text7        29C
_YellowLed_TOG                        text13       2B9
__Habs1                               abs1         000
__Hbank0                              bank0        000
__Hbank1                              bank1        000
__Hbank2                              bank2        000
__Hbank3                              bank3        000
__HbssBANK0                           bssBANK0     000
__HbssCOMMON                          bssCOMMON    000
__Hcinit                              cinit        02B
__Hclrtext                            clrtext      000
__Hcode                               code         000
__Hcommon                             common       000
__HcstackBANK0                        cstackBANK0  000
__HcstackCOMMON                       cstackCOMMON 000
__Heeprom_data                        eeprom_data  000
__Hend_init                           end_init     015
__Hfunctab                            functab      03E
__Hinit                               init         012
__Hintentry                           intentry     012
__Hmaintext                           maintext     000
__Hpowerup                            powerup      000
__Hram                                ram          000
__Hreset_vec                          reset_vec    003
__Hsfr0                               sfr0         000
__Hsfr1                               sfr1         000
__Hsfr2                               sfr2         000
__Hsfr3                               sfr3         000
__Hspace_0                            (abs)        2C0
__Hspace_1                            (abs)        07E
__Hspace_2                            (abs)        000
__Hspace_3                            (abs)        000
__Hstack                              stack        000
__Hstrings                            strings      000
__Htext                               text         000
__Labs1                               abs1         000
__Lbank0                              bank0        000
__Lbank1                              bank1        000
__Lbank2                              bank2        000
__Lbank3                              bank3        000
__LbssBANK0                           bssBANK0     000
__LbssCOMMON                          bssCOMMON    000
__Lcinit                              cinit        015
__Lclrtext                            clrtext      000
__Lcode                               code         000
__Lcommon                             common       000
__LcstackBANK0                        cstackBANK0  000
__LcstackCOMMON                       cstackCOMMON 000
__Leeprom_data                        eeprom_data  000
__Lend_init                           end_init     012
__Lfunctab                            functab      02B
__Linit                               init         012
__Lintentry                           intentry     004
__Lmaintext                           maintext     000
__Lpowerup                            powerup      000
__Lram                                ram          000
__Lreset_vec                          reset_vec    000
__Lsfr0                               sfr0         000
__Lsfr1                               sfr1         000
__Lsfr2                               sfr2         000
__Lsfr3                               sfr3         000
__Lspace_0                            (abs)        000
__Lspace_1                            (abs)        000
__Lspace_2                            (abs)        000
__Lspace_3                            (abs)        000
__Lstack                              stack        000
__Lstrings                            strings      000
__Ltext                               text         000
__S0                                  (abs)        2C0
__S1                                  (abs)        07E
__S2                                  (abs)        000
__S3                                  (abs)        000
___bmul                               text5        25A
___bmul@multiplicand                  cstackBANK0  02F
___bmul@multiplier                    cstackBANK0  031
___bmul@product                       cstackBANK0  030
___int_sp                             stack        000
___latbits                            (abs)        002
___sp                                 stack        000
___stackhi                            (abs)        000
___stacklo                            (abs)        000
__end_of_DIO_SetPinDirection          text2        10A
__end_of_GreenLed_TOG                 text11       2B2
__end_of_ISR                          text8        25A
__end_of_RTO_Init                     text6        2AB
__end_of_RTO_vid_CreateTask           text4        211
__end_of_RTO_vid_StartSchedular       text9        184
__end_of_RedLed_TOG                   text12       2B9
__end_of_Timer1_Init_Comp             text3        287
__end_of_Timer_SetCallBack            text7        2A4
__end_of_YellowLed_TOG                text13       2C0
__end_of___bmul                       text5        271
__end_of__i1fptable                   functab      03E
__end_of__initialization              cinit        027
__end_of_main                         maintext     1D2
__end_of_vid_SystemInit               text1        237
__end_ofi1___bmul                     text10       29C
__i1fptable                           functab      02C
__initialization                      cinit        015
__pbssBANK0                           bssBANK0     020
__pbssCOMMON                          bssCOMMON    07D
__pcstackBANK0                        cstackBANK0  02F
__pcstackCOMMON                       cstackCOMMON 070
__pfunctab                            functab      02B
__pintentry                           intentry     004
__pmaintext                           maintext     184
__ptext1                              text1        211
__ptext10                             text10       287
__ptext11                             text11       2AB
__ptext12                             text12       2B2
__ptext13                             text13       2B9
__ptext2                              text2        03E
__ptext3                              text3        271
__ptext4                              text4        1D2
__ptext5                              text5        25A
__ptext6                              text6        2A4
__ptext7                              text7        29C
__ptext8                              text8        237
__ptext9                              text9        10A
__size_of_DIO_SetPinDirection         (abs)        000
__size_of_GreenLed_TOG                (abs)        000
__size_of_ISR                         (abs)        000
__size_of_RTO_Init                    (abs)        000
__size_of_RTO_vid_CreateTask          (abs)        000
__size_of_RTO_vid_StartSchedular      (abs)        000
__size_of_RedLed_TOG                  (abs)        000
__size_of_Timer1_Init_Comp            (abs)        000
__size_of_Timer_SetCallBack           (abs)        000
__size_of_YellowLed_TOG               (abs)        000
__size_of___bmul                      (abs)        000
__size_of__i1fptable                  (abs)        000
__size_of_main                        (abs)        000
__size_of_vid_SystemInit              (abs)        000
__size_ofi1___bmul                    (abs)        000
_main                                 maintext     184
_vid_SystemInit                       text1        211
btemp                                 (abs)        07E
end_of_initialization                 cinit        027
fpbase                                (abs)        000
fptable                               functab      02B
fptotal                               (abs)        000
i1___bmul                             text10       287
i1___bmul@multiplicand                cstackCOMMON 070
i1___bmul@multiplier                  cstackCOMMON 072
i1___bmul@product                     cstackCOMMON 071
i1fpbase                              functab      031
i1fptable                             functab      02C
i1fptotal                             (abs)        008
interrupt_function                    intentry     004
intlevel0                             functab      02B
intlevel1                             functab      02B
intlevel2                             functab      02B
intlevel3                             functab      02B
intlevel4                             functab      02B
intlevel5                             functab      02B
reset_vec                             reset_vec    000
saved_w                               (abs)        07E
start                                 init         012
start_initialization                  cinit        015
wtemp0                                (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 22 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  124[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_RTO_Init
		_RTO_vid_CreateTask
		_Timer1_Init_Comp
		_vid_SystemInit
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _vid_SystemInit *****************
 Defined at:
		line 19 in file "program.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_DIO_SetPinDirection
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DIO_SetPinDirection *****************
 Defined at:
		line 17 in file "DIO_Prog.c"
 Parameters:    Size  Location     Type
  u8PortIdCopy    1    wreg     unsigned char 
  u8PinIdCopy     1    0[BANK0 ] unsigned char 
  u8PinDirCopy    1    1[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  u8PortIdCopy    1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_vid_SystemInit
 This function uses a non-reentrant model


 *************** function _Timer1_Init_Comp *****************
 Defined at:
		line 18 in file "Timer1_Prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _RTO_vid_CreateTask *****************
 Defined at:
		line 37 in file "RTO_Prog.c"
 Parameters:    Size  Location     Type
  copy_u8Prior    1    wreg     unsigned char 
  copy_u16Prio    2    3[BANK0 ] unsigned short 
  copy_u16Firs    2    5[BANK0 ] unsigned short 
  copy_pFn        1    7[BANK0 ] PTR FTN()void 
		 -> YellowLed_TOG(1), GreenLed_TOG(1), RedLed_TOG(1), 
 Auto vars:     Size  Location     Type
  copy_u8Prior    1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       5       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___bmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    2[BANK0 ] unsigned char 
  product         1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_RTO_vid_CreateTask
		_RTO_vid_StartSchedular
 This function uses a non-reentrant model


 *************** function _RTO_Init *****************
 Defined at:
		line 28 in file "RTO_Prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Timer_SetCallBack
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Timer_SetCallBack *****************
 Defined at:
		line 54 in file "Timer1_Prog.c"
 Parameters:    Size  Location     Type
  local_pFn       1    wreg     PTR FTN()void 
		 -> RTO_vid_StartSchedular(1), 
 Auto vars:     Size  Location     Type
  local_pFn       1    0[BANK0 ] PTR FTN()void 
		 -> RTO_vid_StartSchedular(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_RTO_Init
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 62 in file "Timer1_Prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Absolute function
		_RTO_vid_StartSchedular
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _RTO_vid_StartSchedular *****************
 Defined at:
		line 49 in file "RTO_Prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  u8_TCB_Count    1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_GreenLed_TOG
		_RedLed_TOG
		_YellowLed_TOG
		i1___bmul
 This function is called by:
		_RTO_Init
		_ISR
 This function uses a non-reentrant model


 *************** function i1___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    2[COMMON] unsigned char 
  product         1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_RTO_vid_StartSchedular
 This function uses a non-reentrant model


 *************** function _GreenLed_TOG *****************
 Defined at:
		line 36 in file "program.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_RTO_vid_StartSchedular
 This function uses a non-reentrant model


 *************** function _RedLed_TOG *****************
 Defined at:
		line 29 in file "program.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_RTO_vid_StartSchedular
 This function uses a non-reentrant model


 *************** function _YellowLed_TOG *****************
 Defined at:
		line 44 in file "program.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_RTO_vid_StartSchedular
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
DIO_Prog.c
		_DIO_SetPinDirection		CODE           	003E	0000	205

DIO_Prog.c estimated size: 205

Timer1_Prog.c
		_Timer_SetCallBack		CODE           	029C	0000	9
		_ISR           		CODE           	0237	0000	36
		_Timer1_Init_Comp		CODE           	0271	0000	23

Timer1_Prog.c estimated size: 68

program.c
		_RedLed_TOG    		CODE           	02B2	0000	8
		_vid_SystemInit		CODE           	0211	0000	39
		_YellowLed_TOG 		CODE           	02B9	0000	8
		_GreenLed_TOG  		CODE           	02AB	0000	8

program.c estimated size: 63

RTO_Prog.c
		_RTO_vid_StartSchedular		CODE           	010A	0000	123
		_RTO_vid_CreateTask		CODE           	01D2	0000	64
		_RTO_Init      		CODE           	02A4	0000	8

RTO_Prog.c estimated size: 195

shared
		__i1fptable    		ENTRY          	002C	0000	19
		__initialization		CODE           	0015	0000	19
		i1___bmul      		CODE           	0287	0000	22

shared estimated size: 60

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	025A	0000	24

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c estimated size: 24

main.c
		_main          		CODE           	0184	0000	79

main.c estimated size: 79

